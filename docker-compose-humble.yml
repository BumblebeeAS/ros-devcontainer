version: '2.4'
services:
  simulator:
    image: ghcr.io/ngxingyu/simulator_vrx_gazebosim
    ipc: host
    network_mode: host
    security_opt:
      - seccomp:unconfined
    environment:
      - DISPLAY=${DISPLAY}
      - VGL_CLIENT=${VGL_CLIENT}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ~/.Xauthority:/root/.Xauthority:rw
      #- simulator_workspace:/home/developer/catkin_ws/ # persist the devel / install folder across sessions
      #- ../uuv_ws/src:/home/developer/catkin_ws/src
      - vrx_simulator_workspace:/home/developer/colcon_ws/ # persist the devel / install folder across sessions
      - ../vrx_ws/src:/home/developer/colcon_ws/src
    devices:
      - /dev/dri:/dev/dri
      # deploy:
      #   resources:
      #     reservations:
      #       devices:
      #         - driver: nvidia
      #           count: 1
      #           capabilities: [gpu]
      # runtime: nvidia    
    tty: true # to keep session alive
  workspace:
    # env_file:
    #   - .env
    image: ghcr.io/ngxingyu/ros-devcontainer:humble-dev
    ipc: host
    network_mode: host
    security_opt:
      - seccomp:unconfined
      #ports:
      #  - "3001:3000"
      #  - "3002:8888"
    volumes:
      #- auv_workspace:/workspace # persist the devel / install folder across sessions
      #- ../bbauv_ws/src:/workspace/src # bind-mount auv workspace/src folder
      - asv_workspace:/workspace # persist the devel / install folder across sessions
      - ../bbasv_ws/src:/workspace/src # bind-mount asv workspace/src folder
    environment:
      - DISPLAY=${DISPLAY}
      - VGL_CLIENT=${VGL_CLIENT}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    devices:
      - /dev/dri:/dev/dri
    volumes_from:
      - simulator
volumes: # docker volumes to persist build/devel across containers
  vrx_simulator_workspace:
  #simulator_workspace:
  #lrauv_simulator_workspace:
  asv_workspace:
  # auv_workspace:
