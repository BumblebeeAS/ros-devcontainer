version: '2.4'
services:
  simulator:
    # image: ghcr.io/bumblebeeas/simulator_vrx_gazebosim
    build:
      context: ./
      dockerfile: ./simulators/simulator-vrx-gazebosim/Dockerfile
    ipc: host
    network_mode: host
    security_opt:
      - seccomp:unconfined
    environment:
      - DISPLAY=${DISPLAY}
      - VGL_CLIENT=${VGL_CLIENT}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ~/.Xauthority:/root/.Xauthority:rw
      # - simulator_workspace:/home/developer/catkin_ws/ # persist the devel / install folder across sessions
      # - ../uuv_ws/src:/home/developer/catkin_ws/src
      - vrx_simulator_workspace:/home/developer/colcon_ws/ # persist the devel / install folder across sessions
      - ../vrx_ws/src:/home/developer/colcon_ws/src # bind-mount vrx workspace/
    devices:
      - /dev/dri:/dev/dri
      # volumes_from:
      #   - xserver
      # depends_on:
      # - xserver
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    runtime: nvidia
      ## specify a command to run in the container
      # command:
      #   - /bin/sh
      #   - -c
      #   - |
      #     /ros_entrypoint.sh roslaunch bbauv_gazebo_worlds robosub.launch vehicle:=auv4 gui:=true
      # command:  # vrx
      # - /bin/sh
      # - -c
      # - |
      #   sudo -E /ros_entrypoint.sh ros2 launch vrx_gz competition.launch.py world:=sydney_regatta urdf:=$(ros2 pkg prefix --share bbasv_description)/urdf/bbasv3.urdf
    tty: true # to keep session alive
  # workspace:
  #   # env_file:
  #   #   - .env
  #   build:
  #     context: ./
  #     dockerfile: ./devcontainers/humble/Dockerfile
  #   ipc: host
  #   security_opt:
  #     - seccomp:unconfined
  #   # ports:
  #   #   - "3001:3000"
  #   #   - "3002:8888"
  #   volumes:
  #     # - auv_workspace:/workspace # persist the devel / install folder across sessions
  #     # - ../bbauv_ws/src:/workspace/src # bind-mount auv workspace/src folder
  #     - asv_workspace:/workspace # persist the devel / install folder across sessions
  #     - ../vrx_ws/src:/workspace/src # bind-mount asv workspace/src folder
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #     - VGL_CLIENT=${VGL_CLIENT}
  #   devices:
  #     - /dev/dri:/dev/dri      
  #   volumes_from:
  #     - simulator
  #   # depends_on:
  #   #   - xserver
  #     # deploy:
  #     #   resources:
  #     #     reservations:
  #     #       devices:
  #     #         - driver: nvidia
  #     #           count: 1
  #     #           capabilities: [gpu]
volumes:
  # docker volumes to persist build/devel across containers
  vrx_simulator_workspace:
    # simulator_workspace:
    #lrauv_simulator_workspace:
    # asv_workspace:
    # auv_workspace:
