version: '2.4'
services:
  xserver:
    image: devrt/xserver
    ipc: host
    security_opt:
      - seccomp:unconfined
    ports:
      - "3000:80"
    volumes:
      - /dev/dri:/dev/dri
    healthcheck:
      test: ["CMD-SHELL", "test -e /tmp/.X11-unix/X1"]
      interval: "1s"
      retries: 20
  simulator:
    image: ghcr.io/ngxingyu/simulator_uuv
    ipc: host
    security_opt:
      - seccomp:unconfined
    environment:
      - DISPLAY=:0
    volumes:
      - simulator_workspace:/home/developer/catkin_ws/ # persist the devel / install folder across sessions
      - ../uuv_ws/src:/home/developer/catkin_ws/src
      # - vrx_simulator_workspace:/home/developer/colcon_ws/ # persist the devel / install folder across sessions
      # - ../vrx_ws/src:/home/developer/colcon_ws/src # bind-mount vrx workspace/
    volumes_from:
      - xserver
    depends_on:
      - xserver
      # deploy:
      #   resources:
      #     reservations:
      #       devices:
      #         - driver: nvidia
      #           count: 1
      #           capabilities: [gpu]
      # runtime: nvidia
    ## specify a command to run in the container
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #     /ros_entrypoint.sh roslaunch bbauv_gazebo_worlds robosub.launch vehicle:=auv4 gui:=true
    # command:  # vrx
    # - /bin/sh
    # - -c
    # - |
    #   sudo -E /ros_entrypoint.sh ros2 launch vrx_gz competition.launch.py world:=sydney_regatta urdf:=$(ros2 pkg prefix --share bbasv_description)/urdf/bbasv3.urdf
    tty: true # to keep session alive
  workspace:
    # env_file:
    #   - .env
    image: ghcr.io/ngxingyu/ros-devcontainer:noetic-dev
    ipc: host
    security_opt:
      - seccomp:unconfined
    ports:
      - "3001:3000"
      - "3002:8888"
    volumes:
      - auv_workspace:/workspace # persist the devel / install folder across sessions
      - ../bbauv_ws/src:/workspace/src # bind-mount auv workspace/src folder
      # - asv_workspace:/workspace # persist the devel / install folder across sessions
      # - ../bbasv_ws/src:/workspace/src # bind-mount asv workspace/src folder
    environment:
      - DISPLAY=:0
      - ROS_MASTER_URI=http://simulator:11311/
    volumes_from:
      - xserver
      - simulator
    depends_on:
      - xserver
      # deploy:
      #   resources:
      #     reservations:
      #       devices:
      #         - driver: nvidia
      #           count: 1
      #           capabilities: [gpu]
volumes:  # docker volumes to persist build/devel across containers
  # vrx_simulator_workspace:
  simulator_workspace:
  #lrauv_simulator_workspace:
  # asv_workspace:
  auv_workspace:
