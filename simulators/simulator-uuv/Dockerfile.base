# syntax=docker/dockerfile:experimental
FROM ghcr.io/bumblebeeas/ros-devcontainer:noetic-base as noetic

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND noninteractive

# Set Gazebo version
ARG GAZ=gazebo11
ARG DIST=noetic
ARG RELEASE=focal

RUN apt-get update && \
    apt-get install -y curl python3-pip python3-rosdep python3-catkin-pkg python3-catkin-tools python3-vcstool git && \
    apt clean
RUN pip3 install -U --no-cache-dir supervisor supervisor_twiddler

# OSRF distribution is better for gazebo
RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list' && \
    curl -L http://packages.osrfoundation.org/gazebo.key | apt-key add -

RUN apt-get update && apt-get install -y ros-noetic-rviz && \
    apt-get clean

# init rosdep
RUN rosdep update

RUN source /opt/ros/noetic/setup.bash && \
    mkdir -p /uuv_ws/src && cd /uuv_ws/src && catkin_init_workspace && \
    git clone --depth 1 https://github.com/ngxingyu/uuv_simulator.git -b noetic && \
    cd /uuv_ws && rosdep install -i --from-path src --ignore-src -r -y --rosdistro ${DIST} && \
    catkin_make install -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/ros/$ROS_DISTRO -DCATKIN_ENABLE_TESTING=0 && \
    cd / && rm -r /uuv_ws

ADD ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod 755 /ros_entrypoint.sh

RUN sh -c 'echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc'
