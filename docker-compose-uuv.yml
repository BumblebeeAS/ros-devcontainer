version: '2.4'
services:
  simulator:
    image: ghcr.io/bumblebeeas/simulator_uuv
    ipc: host
    network_mode: host
    security_opt:
      - seccomp:unconfined
    environment:
      - DISPLAY=${DISPLAY}
      - VGL_CLIENT=${VGL_CLIENT}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ~/.Xauthority:/root/.Xauthority:rw
      # - simulator_workspace:/home/developer/catkin_ws/ # persist the devel / install folder across sessions
      - uuv_simulator_workspace:/home/developer/catkin_ws/ # persist the devel / 
      - ../uuv_ws/src:/home/developer/catkin_ws/src
      # - vrx_simulator_workspace:/home/developer/colcon_ws/ # persist the devel / install folder across sessions
      # - ../vrx_ws/src:/home/developer/colcon_ws/src # bind-mount vrx workspace/
    devices:
      - /dev/dri:/dev/dri
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    # runtime: nvidia    
    tty: true # to keep session alive
  workspace:
    # env_file:
    #   - .env
    build:
      context: ./
      dockerfile: ./devcontainers/noetic/Dockerfile
    #image: ghcr.io/ngxingyu/ros-devcontainer:noetic-dev
    ipc: host
    network_mode: host
    security_opt:
      - seccomp:unconfined
    # ports:
    #   - "3001:3000"
    #   - "3002:8888"
    volumes:
      - auv_workspace:/workspace # persist the devel / install folder across sessions
      - ../bbauv_ws/src:/workspace/src # bind-mount auv workspace/src folder
      # - asv_workspace:/workspace # persist the devel / install folder across sessions
      # - ../bbasv_ws/src:/workspace/src # bind-mount asv workspace/src folder
    environment:
      - DISPLAY=${DISPLAY}
      - VGL_CLIENT=${VGL_CLIENT}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
    devices:
      - /dev/dri:/dev/dri
    volumes_from:
      - simulator
volumes: # docker volumes to persist build/devel across containers
  # vrx_simulator_workspace:
  uuv_simulator_workspace:
  #lrauv_simulator_workspace:
  # asv_workspace:
  auv_workspace:
